{"remainingRequest":"/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/node_modules/babel-loader/lib/index.js!/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/node_modules/eslint-loader/index.js??ref--13-0!/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/src/store/modules/auth.js","dependencies":[{"path":"/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/src/store/modules/auth.js","mtime":1621435428469},{"path":"/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2hlZXdvbnlvdWgvRGVza3RvcC9TU0FGWTV0aC9XZWJGcm9udC92dWVqcy9IYXBweUhvdXNlVnVlX1x1MTEwMFx1MTE3NVx1MTFCN1x1MTExMlx1MTE2OVx1MTEwOVx1MTE2NVx1MTFBOF9cdTExMEJcdTExNzJcdTExMTJcdTExNzRcdTExMEJcdTExNkZcdTExQUIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0IHsgQVVUSF9SRVFVRVNULCBBVVRIX0VSUk9SLCBBVVRIX1NVQ0NFU1MsIEFVVEhfTE9HT1VUIH0gZnJvbSAiLi4vYWN0aW9ucy9hdXRoIjsKaW1wb3J0IHsgVVNFUl9SRVFVRVNUIH0gZnJvbSAiLi4vYWN0aW9ucy91c2VyIjsKaW1wb3J0IGFwaUNhbGwgZnJvbSAiLi4vLi4vdXRpbHMvYXBpIjsKdmFyIHN0YXRlID0gewogIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlci10b2tlbicpIHx8ICcnLAogIHN0YXR1czogJycsCiAgaGFzTG9hZGVkT25jZTogZmFsc2UKfTsKdmFyIGdldHRlcnMgPSB7CiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiAhIXN0YXRlLnRva2VuOwogIH0sCiAgYXV0aFN0YXR1czogZnVuY3Rpb24gYXV0aFN0YXR1cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnN0YXR1czsKICB9Cn07IC8vICAge2FjY2Vzc1Rva2VuOiAiZXlKaGJHY2lPaUpJVXpVeE1pSjkuZXlKemRXSWlPaUkwSWl3aWFXRjBJam94TlRjd03igKZYWU95N0tadmEyTEN3SG5EaXh5UUhBSVgxRTZLM0V6bUE5V1NNTkprbGtJVnRoanlRIiwgdG9rZW5UeXBlOiAiQmVhcmVyIn0KCnZhciBhY3Rpb25zID0gKF9hY3Rpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQVVUSF9SRVFVRVNULCBmdW5jdGlvbiAoX3JlZiwgdXNlcikgewogIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdCwKICAgICAgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBjb21taXQoQVVUSF9SRVFVRVNUKTsKICAgIGFwaUNhbGwoewogICAgICB1cmw6ICdhdXRoJywKICAgICAgZGF0YTogdXNlciwKICAgICAgbWV0aG9kOiAnUE9TVCcKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgLy8gY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLSIrcmVzcC5hY2Nlc3NUb2tlbikKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXItdG9rZW4nLCByZXNwLmFjY2Vzc1Rva2VuKTsKCiAgICAgIGlmIChyZXNwLmFjY2Vzc1Rva2VuICE9IG51bGwgfHwgcmVzcC5hY2Nlc3NUb2tlbiAhPSAnJykgewogICAgICAgIGFsZXJ0KCLslYjrhZXtlZjshLjsmpQgICIgKyB1c2VyLnVzZXJuYW1lT3JFbWFpbCk7CiAgICAgIH0KCiAgICAgIGNvbW1pdChBVVRIX1NVQ0NFU1MsIHJlc3ApOwogICAgICBkaXNwYXRjaChVU0VSX1JFUVVFU1QsIHVzZXIpOwogICAgICByZXNvbHZlKHJlc3ApOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICBhbGVydCgi66Gc6re47J247JeQIOyLpO2MqO2VmOyYgOyKteuLiOuLpC4iKTsKICAgICAgY29tbWl0KEFVVEhfRVJST1IsIGVycik7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyLXRva2VuJyk7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdwcm9maWxlbmFtZScpOwogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBVVRIX0xPR09VVCwgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIGNvbW1pdChBVVRIX0xPR09VVCk7CiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlci10b2tlbicpOwogICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Byb2ZpbGVuYW1lJyk7CiAgICByZXNvbHZlKCk7CiAgfSk7Cn0pLCBfYWN0aW9ucyk7CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVVUSF9SRVFVRVNULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5zdGF0dXMgPSAnbG9hZGluZyc7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVVUSF9TVUNDRVNTLCBmdW5jdGlvbiAoc3RhdGUsIHJlc3ApIHsKICBzdGF0ZS5zdGF0dXMgPSAnc3VjY2Vzcyc7CiAgc3RhdGUudG9rZW4gPSByZXNwLmFjY2Vzc1Rva2VuOwogIHN0YXRlLmhhc0xvYWRlZE9uY2UgPSB0cnVlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnN0YXR1cyA9ICdlcnJvcic7CiAgc3RhdGUuaGFzTG9hZGVkT25jZSA9IHRydWU7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVVUSF9MT0dPVVQsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnRva2VuID0gJyc7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/heewonyouh/Desktop/SSAFY5th/WebFront/vuejs/HappyHouseVue_김호석_유희원/src/store/modules/auth.js"],"names":["AUTH_REQUEST","AUTH_ERROR","AUTH_SUCCESS","AUTH_LOGOUT","USER_REQUEST","apiCall","state","token","localStorage","getItem","status","hasLoadedOnce","getters","isAuthenticated","authStatus","actions","user","commit","dispatch","Promise","resolve","reject","url","data","method","then","resp","setItem","accessToken","alert","usernameOrEmail","catch","err","removeItem","mutations"],"mappings":"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","sourcesContent":["\nimport { AUTH_REQUEST, AUTH_ERROR, AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/auth'\nimport { USER_REQUEST } from '../actions/user'\nimport apiCall from '../../utils/api'\n\nconst state = { token: localStorage.getItem('user-token') || '', status: '', hasLoadedOnce: false }\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  authStatus: state => state.status\n}\n//   {accessToken: \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI0IiwiaWF0IjoxNTcwM…XYOy7KZva2LCwHnDixyQHAIX1E6K3EzmA9WSMNJklkIVthjyQ\", tokenType: \"Bearer\"}\n   \nconst actions = {\n  [AUTH_REQUEST]: ({commit, dispatch}, user) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_REQUEST)\n      apiCall({url: 'auth', data: user, method: 'POST'})\n      .then(resp => {\n       // console.log(\"------------\"+resp.accessToken)\n        localStorage.setItem('user-token', resp.accessToken)\n        if (resp.accessToken!=null || resp.accessToken !='') {\n            alert(\"안녕하세요  \"+user.usernameOrEmail);\n        }\n        commit(AUTH_SUCCESS,resp)\n        dispatch(USER_REQUEST,user)\n        resolve(resp)\n      })\n      .catch(err => {\n        alert(\"로그인에 실패하였습니다.\");\n        commit(AUTH_ERROR, err)\n        localStorage.removeItem('user-token')\n        localStorage.removeItem('profilename')\n        reject(err)\n      })\n    })\n  },\n  [AUTH_LOGOUT]: ({commit}) => {\n    return new Promise((resolve) => {\n      commit(AUTH_LOGOUT)\n      localStorage.removeItem('user-token')\n      localStorage.removeItem('profilename')\n      resolve()\n    })\n  }\n}\n\nconst mutations = {\n  [AUTH_REQUEST]: (state) => {\n    state.status = 'loading'\n  },\n  [AUTH_SUCCESS]: (state, resp) => {\n    state.status = 'success'\n    state.token = resp.accessToken\n    state.hasLoadedOnce = true\n  },\n  [AUTH_ERROR]: (state) => {\n    state.status = 'error'\n    state.hasLoadedOnce = true\n  },\n  [AUTH_LOGOUT]: (state) => {\n    state.token = ''\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n}\n"]}]}